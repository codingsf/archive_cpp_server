
PureServer C++ 代码风格指南

Author: zengpw
Contact: zengpw1226@gmail.com;zengpw@foxmail.com
Last Update: 2014-9-9 11:26:08

一、文件命名

1、文件名全部用小写，单词之间用“_”连接，尽量以一个单词表达作用。

2、源文件命名

//公开头文件： 以“_classname”命名

//example

        _channel.h

//私有头文件， 以“classname_”命名

//example

    基类：     classname.h ，            例如 channel.h
    实现类：   classname_imp ，          例如 channel_imp.h
    抽象工厂： classname_factory ,       例如 channel_imp_factory.h
    子类：     classname_sub ，          例如 channel_imp_win.h

//实现文件，   和头文件名字相同



二、文件注释、注释

1、头文件均需要用宏保护起来，风格是 “__NAMESPACE_CLASSNAME__”

//example

    #ifndef __PS_FW_THREAD__
    #define __PS_FW_THREAD__
        ... code
    #endif //__PS_FW_THREAD__
    
    
2、头文件或实现文件在保护宏下面，include前面，均需要加上注释；两者可以是一样的，但是推荐不写成一样

//example

    ////////////////////////////////////////////////////////////////////////////////////////
    //
    //	Creater : zengpw
    //	Create Date : 2014年8月21日
    //	Modify history :
    //					2014年9月5日 zengpw 重新设计
    //					2014年9月7日 zengpw 重新设计
    //	File Property : private ，这里指该头文件不是公开的
    //	Description :
    //				I. 线程基类，提供启动线程的方法
    //				Ⅱ. 它的构造、启动线程等方法都是 protected 的，你必须要继承它才能使用它
    //
    //
    ////////////////////////////////////////////////////////////////////////////////////////
    
    
3、 namespace 结束时需要加上注释

//example

    namespace PS_FW
    {
    }	//PS_FW
    
    
4、代码注释，推荐用 /**/ ，当然你也可以用 //

5、成员方法注释，推荐一个函数一个注释

6、成员变量注释，推荐作用域或者目的性相同的变量，一起注释

//区块注释
//example

    /*---------------------
    // use : 读取数据使用
    // m_szData A B ，2个数据区
    // m_pData 指向当前使用的数据区
    // m_pDataNext 指向下次使用的数据区
    // m_pos 数据区的实际结束地址，偏移量
    ---------------------*/
    char m_szDataA[30960];
    char m_szDataB[30960];
    char* m_pData;
    char* m_pDataNext;
    int m_pos;



三、类

1、如果实现方法写在头文件里，那么 {} 后面建议不加符号 ";"

//example

    ThreadPool(){}

2、头文件里面，先声明方法，再声明变量；先声明 public ，再声明 protected ， 再声明 private

//example

	public:
		Connection();
		virtual ~Connection();
	public:
		int server(const char* ip,const int port);
	public:
		Channel* m_pChannelServer;
	private:
		char m_szBuf[10240];
        
3、可以使用多个 public/protected/private ，以方便你强调某些函数或变量；实际上你也可以用区块注释来做强调；

4、构造和析构函数最好和其它函数分开声明（用多个public）





=============================================================================================

English Version: Be come soon.



















